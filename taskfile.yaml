version: '3'

interval: '500ms'
tasks:

  install-sqlc:
    cmds:
    - go install github.com/sqlc-dev/sqlc/cmd/sqlc@latest
    status:
    - sqlc --help
  install-migrate:
    status:
    - migrate -version
    cmds:
    - go install -tags 'sqlite3' github.com/golang-migrate/migrate/v4/cmd/migrate@latest

  install-dev-deps:
    deps: [install-sqlc, install-migrate]

  sql-watch:
    deps: [install-sqlc]
    watch: true
    sources:
    - db/migrations/*.sql
    - db/queries/*.sql
    generates:
    - db/db.go
    - db/models.go
    - db/*.sql.go
    cmds:
    - sqlc generate

  migrate:
    cmds:
    - echo "TODO run migrations"

  generate-migration:
    deps: [install-migrate]
    dir: db/migrations
    preconditions:
    - sh: test -n "{{.CLI_ARGS}}"
      msg: "Please provide a name for the migration"
    cmds:
    - migrate create -ext sql {{.CLI_ARGS}}

  delete-last-migration:
    dir: db/migrations
    cmds:
    - rm -f $(ls -t | head -n2)

  redo-last-migration:
    dir: db/migrations
    deps: [delete-last-migration]
    preconditions:
    - sh: test -n "{{.CLI_ARGS}}"
      msg: "Please provide a name for the migration"
    cmds:
    - task: generate-migration

  start:
    cmds:
    - go run . serve -p 8080

  build-frontend:dev:
    dir: web
    sources:
    - web/src/**/*
    cmds:
    - npm run build:dev
    -
  build-frontend:
    dir: web
    sources:
    - web/src/**/*
    cmds:
    - npm run build

  preview:
    deps: [build-frontend]
    cmds:
    - task: start

  create-builder:
    cmds:
    - docker buildx create --name builderx --use

  build-docker:
    cmds:
    - docker buildx build --platform linux/amd64 -t vkhobor/extractor:latest --pull --push .

  rebuild-docker:
    cmds:
    - docker buildx build --platform linux/amd64  --no-cache -t vkhobor/extractor:latest --pull --load .

  watch:dev:
    watch: true
    sources:
    - web/src/**/*
    - ./*.go
    cmds:
    - task: build-frontend:dev
    - pkill go-opencv || true
    - task: start
