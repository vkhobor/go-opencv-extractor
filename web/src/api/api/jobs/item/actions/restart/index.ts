/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import {
    createErrorModelFromDiscriminatorValue,
    type ErrorModel,
} from '../../../../../models/index.js';
// @ts-ignore
import {
    type BaseRequestBuilder,
    type Parsable,
    type ParsableFactory,
    type RequestConfiguration,
    type RequestInformation,
    type RequestsMetadata,
} from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /api/jobs/{id}/actions/restart
 */
export interface RestartRequestBuilder
    extends BaseRequestBuilder<RestartRequestBuilder> {
    /**
     * Restart the job pipeline
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ErrorModel} error when the service returns a 4XX or 5XX status code
     */
    post(
        requestConfiguration?: RequestConfiguration<object> | undefined
    ): Promise<void>;
    /**
     * Restart the job pipeline
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
    toPostRequestInformation(
        requestConfiguration?: RequestConfiguration<object> | undefined
    ): RequestInformation;
}
/**
 * Uri template for the request builder.
 */
export const RestartRequestBuilderUriTemplate =
    '{+baseurl}/api/jobs/{id}/actions/restart';
/**
 * Metadata for all the requests in the request builder.
 */
export const RestartRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: RestartRequestBuilderUriTemplate,
        responseBodyContentType: 'application/problem+json',
        errorMappings: {
            XXX: createErrorModelFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: 'sendNoResponseContent',
    },
};
/* tslint:enable */
/* eslint-enable */
