/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createErrorModelFromDiscriminatorValue, createJobAndVideosFromDiscriminatorValue, type ErrorModel, type JobAndVideos } from '../../../../models/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /api/jobs/{id}/videos
 */
export interface VideosRequestBuilder extends BaseRequestBuilder<VideosRequestBuilder> {
    /**
     * Get API jobs by ID videos
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<JobAndVideos>}
     * @throws {ErrorModel} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<JobAndVideos | undefined>;
    /**
     * Get API jobs by ID videos
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Uri template for the request builder.
 */
export const VideosRequestBuilderUriTemplate = "{+baseurl}/api/jobs/{id}/videos";
/**
 * Metadata for all the requests in the request builder.
 */
export const VideosRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: VideosRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createErrorModelFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createJobAndVideosFromDiscriminatorValue,
    },
};
/* tslint:enable */
/* eslint-enable */
