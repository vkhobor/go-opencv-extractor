/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createUntypedNodeFromDiscriminatorValue, type ApiError, type Parsable, type ParseNode, type SerializationWriter, type UntypedNode } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CreatedJob}
 */
// @ts-ignore
export function createCreatedJobFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCreatedJob;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CreateJob}
 */
// @ts-ignore
export function createCreateJobFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCreateJob;
}
export interface CreatedJob extends Parsable {
    /**
     * The id property
     */
    id?: string | null;
    /**
     * A URL to the JSON Schema for this object.
     */
    schema?: string | null;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ErrorDetail}
 */
// @ts-ignore
export function createErrorDetailFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoErrorDetail;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ErrorModel}
 */
// @ts-ignore
export function createErrorModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoErrorModel;
}
export interface CreateJob extends Parsable {
    /**
     * The filter_id property
     */
    filterId?: string | null;
    /**
     * The is_query_based property
     */
    isQueryBased?: boolean | null;
    /**
     * The is_single_video property
     */
    isSingleVideo?: boolean | null;
    /**
     * The limit property
     */
    limit?: number | null;
    /**
     * A URL to the JSON Schema for this object.
     */
    schema?: string | null;
    /**
     * The search_query property
     */
    searchQuery?: string | null;
    /**
     * The youtube_id property
     */
    youtubeId?: string | null;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {JobAndVideos}
 */
// @ts-ignore
export function createJobAndVideosFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoJobAndVideos;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {JobDetails}
 */
// @ts-ignore
export function createJobDetailsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoJobDetails;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {JobVideo}
 */
// @ts-ignore
export function createJobVideoFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoJobVideo;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ListJobBody}
 */
// @ts-ignore
export function createListJobBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoListJobBody;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Picture}
 */
// @ts-ignore
export function createPictureFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPicture;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Response}
 */
// @ts-ignore
export function createResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UpdateJobLimitRequestBody}
 */
// @ts-ignore
export function createUpdateJobLimitRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUpdateJobLimitRequestBody;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCreatedJob(createdJob: Partial<CreatedJob> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "id": n => { createdJob.id = n.getStringValue(); },
        "$schema": n => { createdJob.schema = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCreateJob(createJob: Partial<CreateJob> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "filter_id": n => { createJob.filterId = n.getStringValue(); },
        "is_query_based": n => { createJob.isQueryBased = n.getBooleanValue(); },
        "is_single_video": n => { createJob.isSingleVideo = n.getBooleanValue(); },
        "limit": n => { createJob.limit = n.getNumberValue(); },
        "$schema": n => { createJob.schema = n.getStringValue(); },
        "search_query": n => { createJob.searchQuery = n.getStringValue(); },
        "youtube_id": n => { createJob.youtubeId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoErrorDetail(errorDetail: Partial<ErrorDetail> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "location": n => { errorDetail.location = n.getStringValue(); },
        "message": n => { errorDetail.message = n.getStringValue(); },
        "value": n => { errorDetail.value = n.getObjectValue<UntypedNode>(createUntypedNodeFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoErrorModel(errorModel: Partial<ErrorModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "detail": n => { errorModel.detail = n.getStringValue(); },
        "errors": n => { errorModel.errors = n.getCollectionOfObjectValues<ErrorDetail>(createErrorDetailFromDiscriminatorValue); },
        "instance": n => { errorModel.instance = n.getStringValue(); },
        "$schema": n => { errorModel.schema = n.getStringValue(); },
        "status": n => { errorModel.status = n.getNumberValue(); },
        "title": n => { errorModel.title = n.getStringValue(); },
        "type": n => { errorModel.type = n.getStringValue() ?? "about:blank"; },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoJobAndVideos(jobAndVideos: Partial<JobAndVideos> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "id": n => { jobAndVideos.id = n.getStringValue(); },
        "$schema": n => { jobAndVideos.schema = n.getStringValue(); },
        "videos": n => { jobAndVideos.videos = n.getCollectionOfObjectValues<JobVideo>(createJobVideoFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoJobDetails(jobDetails: Partial<JobDetails> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "id": n => { jobDetails.id = n.getStringValue(); },
        "$schema": n => { jobDetails.schema = n.getStringValue(); },
        "search_query": n => { jobDetails.searchQuery = n.getStringValue(); },
        "videos_found": n => { jobDetails.videosFound = n.getNumberValue(); },
        "video_target": n => { jobDetails.videoTarget = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoJobVideo(jobVideo: Partial<JobVideo> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "download_status": n => { jobVideo.downloadStatus = n.getStringValue(); },
        "import_status": n => { jobVideo.importStatus = n.getStringValue(); },
        "youtube_id": n => { jobVideo.youtubeId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoListJobBody(listJobBody: Partial<ListJobBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "id": n => { listJobBody.id = n.getStringValue(); },
        "limit": n => { listJobBody.limit = n.getNumberValue(); },
        "search_query": n => { listJobBody.searchQuery = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPicture(picture: Partial<Picture> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "blob_id": n => { picture.blobId = n.getStringValue(); },
        "id": n => { picture.id = n.getStringValue(); },
        "youtube_id": n => { picture.youtubeId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoResponse(response: Partial<Response> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "pictures": n => { response.pictures = n.getCollectionOfObjectValues<Picture>(createPictureFromDiscriminatorValue); },
        "$schema": n => { response.schema = n.getStringValue(); },
        "total": n => { response.total = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUpdateJobLimitRequestBody(updateJobLimitRequestBody: Partial<UpdateJobLimitRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "limit": n => { updateJobLimitRequestBody.limit = n.getNumberValue(); },
        "$schema": n => { updateJobLimitRequestBody.schema = n.getStringValue(); },
    }
}
export interface ErrorDetail extends Parsable {
    /**
     * Where the error occurred, e.g. 'body.items[3].tags' or 'path.thing-id'
     */
    location?: string | null;
    /**
     * Error message text
     */
    message?: string | null;
    /**
     * The value at the given location
     */
    value?: UntypedNode | null;
}
export interface ErrorModel extends ApiError, Parsable {
    /**
     * A human-readable explanation specific to this occurrence of the problem.
     */
    detail?: string | null;
    /**
     * Optional list of individual error details
     */
    errors?: ErrorDetail[] | null;
    /**
     * A URI reference that identifies the specific occurrence of the problem.
     */
    instance?: string | null;
    /**
     * A URL to the JSON Schema for this object.
     */
    schema?: string | null;
    /**
     * HTTP status code
     */
    status?: number | null;
    /**
     * A short, human-readable summary of the problem type. This value should not change between occurrences of the error.
     */
    title?: string | null;
    /**
     * A URI reference to human-readable documentation for the error.
     */
    type?: string | null;
}
export interface JobAndVideos extends Parsable {
    /**
     * The id property
     */
    id?: string | null;
    /**
     * A URL to the JSON Schema for this object.
     */
    schema?: string | null;
    /**
     * The videos property
     */
    videos?: JobVideo[] | null;
}
export interface JobDetails extends Parsable {
    /**
     * The id property
     */
    id?: string | null;
    /**
     * A URL to the JSON Schema for this object.
     */
    schema?: string | null;
    /**
     * The search_query property
     */
    searchQuery?: string | null;
    /**
     * The videos_found property
     */
    videosFound?: number | null;
    /**
     * The video_target property
     */
    videoTarget?: number | null;
}
export interface JobVideo extends Parsable {
    /**
     * The download_status property
     */
    downloadStatus?: string | null;
    /**
     * The import_status property
     */
    importStatus?: string | null;
    /**
     * The youtube_id property
     */
    youtubeId?: string | null;
}
export interface ListJobBody extends Parsable {
    /**
     * The id property
     */
    id?: string | null;
    /**
     * The limit property
     */
    limit?: number | null;
    /**
     * The search_query property
     */
    searchQuery?: string | null;
}
export interface Picture extends Parsable {
    /**
     * The blob_id property
     */
    blobId?: string | null;
    /**
     * The id property
     */
    id?: string | null;
    /**
     * The youtube_id property
     */
    youtubeId?: string | null;
}
export interface Response extends Parsable {
    /**
     * The pictures property
     */
    pictures?: Picture[] | null;
    /**
     * A URL to the JSON Schema for this object.
     */
    schema?: string | null;
    /**
     * The total property
     */
    total?: number | null;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCreatedJob(writer: SerializationWriter, createdJob: Partial<CreatedJob> | undefined | null = {}) : void {
    if (createdJob) {
        writer.writeStringValue("id", createdJob.id);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCreateJob(writer: SerializationWriter, createJob: Partial<CreateJob> | undefined | null = {}) : void {
    if (createJob) {
        writer.writeStringValue("filter_id", createJob.filterId);
        writer.writeBooleanValue("is_query_based", createJob.isQueryBased);
        writer.writeBooleanValue("is_single_video", createJob.isSingleVideo);
        writer.writeNumberValue("limit", createJob.limit);
        writer.writeStringValue("search_query", createJob.searchQuery);
        writer.writeStringValue("youtube_id", createJob.youtubeId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeErrorDetail(writer: SerializationWriter, errorDetail: Partial<ErrorDetail> | undefined | null = {}) : void {
    if (errorDetail) {
        writer.writeStringValue("location", errorDetail.location);
        writer.writeStringValue("message", errorDetail.message);
        writer.writeObjectValue("value", errorDetail.value);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeErrorModel(writer: SerializationWriter, errorModel: Partial<ErrorModel> | undefined | null = {}) : void {
    if (errorModel) {
        writer.writeStringValue("detail", errorModel.detail);
        writer.writeCollectionOfObjectValues<ErrorDetail>("errors", errorModel.errors, serializeErrorDetail);
        writer.writeStringValue("instance", errorModel.instance);
        writer.writeNumberValue("status", errorModel.status);
        writer.writeStringValue("title", errorModel.title);
        writer.writeStringValue("type", errorModel.type ?? "about:blank");
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeJobAndVideos(writer: SerializationWriter, jobAndVideos: Partial<JobAndVideos> | undefined | null = {}) : void {
    if (jobAndVideos) {
        writer.writeStringValue("id", jobAndVideos.id);
        writer.writeCollectionOfObjectValues<JobVideo>("videos", jobAndVideos.videos, serializeJobVideo);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeJobDetails(writer: SerializationWriter, jobDetails: Partial<JobDetails> | undefined | null = {}) : void {
    if (jobDetails) {
        writer.writeStringValue("id", jobDetails.id);
        writer.writeStringValue("search_query", jobDetails.searchQuery);
        writer.writeNumberValue("videos_found", jobDetails.videosFound);
        writer.writeNumberValue("video_target", jobDetails.videoTarget);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeJobVideo(writer: SerializationWriter, jobVideo: Partial<JobVideo> | undefined | null = {}) : void {
    if (jobVideo) {
        writer.writeStringValue("download_status", jobVideo.downloadStatus);
        writer.writeStringValue("import_status", jobVideo.importStatus);
        writer.writeStringValue("youtube_id", jobVideo.youtubeId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeListJobBody(writer: SerializationWriter, listJobBody: Partial<ListJobBody> | undefined | null = {}) : void {
    if (listJobBody) {
        writer.writeStringValue("id", listJobBody.id);
        writer.writeNumberValue("limit", listJobBody.limit);
        writer.writeStringValue("search_query", listJobBody.searchQuery);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePicture(writer: SerializationWriter, picture: Partial<Picture> | undefined | null = {}) : void {
    if (picture) {
        writer.writeStringValue("blob_id", picture.blobId);
        writer.writeStringValue("id", picture.id);
        writer.writeStringValue("youtube_id", picture.youtubeId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeResponse(writer: SerializationWriter, response: Partial<Response> | undefined | null = {}) : void {
    if (response) {
        writer.writeCollectionOfObjectValues<Picture>("pictures", response.pictures, serializePicture);
        writer.writeNumberValue("total", response.total);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUpdateJobLimitRequestBody(writer: SerializationWriter, updateJobLimitRequestBody: Partial<UpdateJobLimitRequestBody> | undefined | null = {}) : void {
    if (updateJobLimitRequestBody) {
        writer.writeNumberValue("limit", updateJobLimitRequestBody.limit);
    }
}
export interface UpdateJobLimitRequestBody extends Parsable {
    /**
     * The limit property
     */
    limit?: number | null;
    /**
     * A URL to the JSON Schema for this object.
     */
    schema?: string | null;
}
/* tslint:enable */
/* eslint-enable */
